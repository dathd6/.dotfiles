{"ref":"5bc9ac6e-bc03-4e87-b69e-75c0d87f7b52","content":"{\"version\":1,\"machineId\":\"be669ddc-e9c3-4030-b90d-8a70362f9e72\",\"content\":\"{\\\"typescript.json\\\":\\\"{\\\\n  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and\\\\n  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\\\n  // same ids are connected.\\\\n  // Example:\\\\n  // \\\\\\\"Print to console\\\\\\\": {\\\\n  // \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n  // \\\\t\\\\\\\"body\\\\\\\": [\\\\n  // \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n  // \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n  // \\\\t],\\\\n  // \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n  // }\\\\n  \\\\\\\"Type GraphQL Resolver\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"resolver\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"import { Resolver } from \\\\\\\\\\\\\\\"type-graphql\\\\\\\\\\\\\\\";\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"@Resolver()\\\\\\\",\\\\n      \\\\\\\"export class $1Resolver {\\\\\\\",\\\\n      \\\\\\\"  @$2()\\\\\\\",\\\\n      \\\\\\\"  async $3() {}\\\\\\\",\\\\n      \\\\\\\"}\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"TypeGraphQL Resolver\\\\\\\"\\\\n  },\\\\n  \\\\\\\"Util Function\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"util\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\\\\"export const $TM_FILENAME_BASE = () => {\\\\\\\", \\\\\\\"\\\\\\\", \\\\\\\"}\\\\\\\"],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"Util Function\\\\\\\"\\\\n  },\\\\n  \\\\\\\"console.log\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"cl\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\\\\"console.log($1)\\\\\\\"],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"console.log\\\\\\\"\\\\n  }\\\\n}\\\\n\\\",\\\"typescriptreact.json\\\":\\\"{\\\\n  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and\\\\n  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\\\n  // same ids are connected.\\\\n  // Example:\\\\n  // \\\\\\\"Print to console\\\\\\\": {\\\\n  // \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n  // \\\\t\\\\\\\"body\\\\\\\": [\\\\n  // \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n  // \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n  // \\\\t],\\\\n  // \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n  // }\\\\n  \\\\\\\"Typescript React PureComponent\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"rpc\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"import * as React from 'react'\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"export class $1 extends React.PureComponent {\\\\\\\",\\\\n      \\\\\\\"\\\\\\\\trender() {\\\\\\\",\\\\n      \\\\\\\"\\\\\\\\t\\\\\\\\treturn ($2);\\\\\\\",\\\\n      \\\\\\\"}}\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"Typescript React PureComponent\\\\\\\"\\\\n  },\\\\n  \\\\\\\"Typescript React Function Component\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"tsx\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"import React from 'react'\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"interface ${TM_FILENAME_BASE}Props {\\\\\\\",\\\\n      \\\\\\\"}\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"const $TM_FILENAME_BASE: React.FC<${TM_FILENAME_BASE}Props> = ({$2}) => {\\\\\\\",\\\\n      \\\\\\\"\\\\\\\\t\\\\\\\\treturn (<$1>$3</$1>);\\\\\\\",\\\\n      \\\\\\\"}\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"export default $TM_FILENAME_BASE\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"Typescript React Function Component\\\\\\\"\\\\n  },\\\\n  \\\\\\\"React Native StyleSheet\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"rnss\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"import {StyleSheet} from 'react-native'\\\\\\\",\\\\n      \\\\\\\"const styles = StyleSheet.create({\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"});\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"React Native StyleSheet\\\\\\\"\\\\n  },\\\\n  \\\\\\\"console.log\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"cl\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\\\\"console.log($1)\\\\\\\"],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"console.log\\\\\\\"\\\\n  },\\\\n  \\\\\\\"className={classnames()}\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"cc\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\\\\"className={classnames('$1')}\\\\\\\"],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"tailwind react stuff\\\\\\\"\\\\n  },\\\\n  \\\\\\\"Apollo Query Component\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"apq\\\\\\\",\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"interface Props {\\\\\\\",\\\\n      \\\\\\\"  children: (data: QueryResult<$1, OperationVariables>) => JSX.Element;\\\\\\\",\\\\n      \\\\\\\"}\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"export class $2 extends React.PureComponent<Props> {\\\\\\\",\\\\n      \\\\\\\"  render() {\\\\\\\",\\\\n      \\\\\\\"    return (\\\\\\\",\\\\n      \\\\\\\"     <Query<$1> query={$3}>{x => this.props.children(x)}</Query>\\\\\\\",\\\\n      \\\\\\\"    );\\\\\\\",\\\\n      \\\\\\\"  }\\\\\\\",\\\\n      \\\\\\\"}\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"Apollo Query Component\\\\\\\"\\\\n  }\\\\n}\\\\n\\\"}\"}"}